[{"/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/index.tsx":"1","/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/App.tsx":"2","/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/pages/Usuarios/index.tsx":"3","/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/components/Header/index.tsx":"4","/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/pages/Home/index.tsx":"5","/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/routes.tsx":"6","/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/pages/UsuarioForm/index.tsx":"7","/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/services/api.ts":"8"},{"size":243,"mtime":1607032657284,"results":"9","hashOfConfig":"10"},{"size":284,"mtime":1607056787967,"results":"11","hashOfConfig":"10"},{"size":3019,"mtime":1607117494549,"results":"12","hashOfConfig":"10"},{"size":716,"mtime":1607054929238,"results":"13","hashOfConfig":"10"},{"size":675,"mtime":1607048168873,"results":"14","hashOfConfig":"10"},{"size":592,"mtime":1607110860850,"results":"15","hashOfConfig":"10"},{"size":4184,"mtime":1607119329653,"results":"16","hashOfConfig":"10"},{"size":117,"mtime":1607033076536,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"acpdkw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/index.tsx",[],["37","38"],"/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/App.tsx",[],["39","40"],"/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/pages/Usuarios/index.tsx",["41","42"],"/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/components/Header/index.tsx",[],"/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/pages/Home/index.tsx",[],"/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/routes.tsx",[],"/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/pages/UsuarioForm/index.tsx",["43","44","45","46","47","48","49"],"import React, { ChangeEvent, useState, useEffect } from 'react';\nimport { Breadcrumb, Button, Form, FormFile } from 'react-bootstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport MaskedFormControl from 'react-bootstrap-maskedinput'\n\n\nimport api from '../../services/api';\nimport imageDefault from './images/avatar.png';\nimport { useHistory, useParams } from 'react-router-dom';\n\n\n\ninterface IUsuario {\n    nome: string;\n    dataNascimento: string;\n    foto: string ;\n  }\n\nconst UsuarioForm: React.FC = () => {\n\n    const notifySuccesss = () => toast.success(\"Operação Realizada com Sucesso!\", {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n      const notifyError = () => toast.error(\"Ocorreu um problema na requisição, contate o Administrador!\", {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n      \n\n    const history = useHistory();\n    const { id } = useParams<{ id: string }>();\n\n    const [model, setModel] = useState<IUsuario>({\n        nome: \"\",\n        dataNascimento: \"\",\n        foto: \"\" ,\n    });\n\n    useEffect(() => {\n        if(id !== undefined){\n            findUsario(id);\n        }\n     }, [id])\n\n    function updateModel(e: ChangeEvent<HTMLInputElement>){\n        setModel({\n            ... model,\n            [e.target.name]: e.target.value\n        })\n    }\n   \n    async function onSubmit(e: ChangeEvent<HTMLFormElement>){\n        e.preventDefault();\n        if(id !== undefined){\n            const response = await api.put(`/usuarios/${id}`, model);\n            if(response.status == 204){\n                notifySuccesss();\n            }else{\n                notifyError();\n            }\n        }else{\n            const response = await api.post('/usuarios', model);\n            if(response.status == 200){\n                notifySuccesss();\n            }else{\n                notifyError();\n            }\n        }\n        voltar();\n    }\n\n    async function findUsario(id: string){\n        const response = await api.get(`/usuarios/${id}`);\n        setModel({\n            nome: response.data.nome,\n            dataNascimento: response.data.dataNascimento,\n            foto: response.data.foto\n        })\n    }\n\n  // Handles file upload event and updates state\n  const uploadImage = async (e) => {\n    const file = e.target.files[0];\n    const  base64: string = await convertBase64(file) as string;\n    {model.foto = base64}\n  };\n\n  \n\n  const convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  function voltar(){\n    history.goBack();\n  }\n   \n\n  return(\n    <div className=\"container\">\n    <br/>\n    <Breadcrumb>\n    <div className=\"top-user\">\n      <div className=\"links\">\n          <Breadcrumb.Item active>Novo Usuário</Breadcrumb.Item>\n       </div>\n       <div className=\"btn-new\">\n          <Button variant=\"dark\" size=\"sm\" onClick={voltar}>Voltar</Button>\n       </div>\n    </div>\n    </Breadcrumb>\n    <br/>\n\n    <div className=\"container\">\n        <img src={model.foto} width=\"100px\"/>\n    </div>\n\n  <Form onSubmit={onSubmit}>\n    <Form.Group>\n        <FormFile.Label>Gostaria de Adicionar um Avatar?</FormFile.Label>\n        <Form.File id=\"avatar\" className=\"img\"  onChange={(e) => {uploadImage(e)}}/>\n    </Form.Group>\n      <Form.Group controlId=\"nome\">\n          <Form.Label>Nome</Form.Label>\n          <Form.Control type=\"text\" name=\"nome\" value={model.nome} onChange={(e: ChangeEvent<HTMLInputElement>) => updateModel(e)}/>\n      </Form.Group>\n      <Form.Group controlId=\"nome\">\n          <Form.Label>Data de Nascimento</Form.Label>\n          <MaskedFormControl mask='11/11/1111' type=\"text\" name=\"dataNascimento\" value={model.dataNascimento} onChange={(e: ChangeEvent<HTMLInputElement>) => updateModel(e)} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n            Salvar\n      </Button>\n  </Form>             \n  </div>\n  );\n}\n\nexport default UsuarioForm;","/Users/andersons.andrade/Desktop/JAVA/SPRING/DEVELOPER/CADASTRO/api-web/src/services/api.ts",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":42,"column":12,"nodeType":"58","messageId":"59","endLine":42,"endColumn":22},{"ruleId":"60","severity":1,"message":"61","line":56,"column":24,"nodeType":"62","messageId":"63","endLine":56,"endColumn":26},{"ruleId":"56","severity":1,"message":"64","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":24},{"ruleId":"56","severity":1,"message":"65","line":9,"column":8,"nodeType":"58","messageId":"59","endLine":9,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":47,"column":16,"nodeType":"68","messageId":"69","endLine":47,"endColumn":17,"fix":"70"},{"ruleId":"60","severity":1,"message":"61","line":56,"column":32,"nodeType":"62","messageId":"63","endLine":56,"endColumn":34},{"ruleId":"60","severity":1,"message":"61","line":63,"column":32,"nodeType":"62","messageId":"63","endLine":63,"endColumn":34},{"ruleId":"71","severity":1,"message":"72","line":85,"column":5,"nodeType":"73","messageId":"74","endLine":85,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":126,"column":9,"nodeType":"77","endLine":126,"endColumn":46},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],["78"],["79"],"@typescript-eslint/no-unused-vars","'formatData' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ToastContainer' is defined but never used.","'imageDefault' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"80","text":"81"},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[1298,1299],""]